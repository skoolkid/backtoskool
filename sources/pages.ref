; Copyright 2008-2015, 2017, 2019 Richard Dymond (rjdymond@gmail.com)

[Page:PlayArea]
PageContent=<div>#CALL:play_area(play_area,0,0,192,21,2,0,8)</div>

[Page:PlayAreaTiles]
JavaScript=tiles.js
PageContent=#INCLUDE(PlayAreaTiles)

[PlayAreaTiles]
<p>Click a tile to see the following info:</p>
<table>
<tr>
<td>
<div class="B">
<div class="H">(x,y)=(25,14)</div>
<table>
<tr>
<td><img alt="25,14" src="#IF({vars[pub]}>2)(../)../images/patiles/80ba38.png"/></td>
<td>
<i>Q_addr</i>=(x,#b181)=#w46361, <i>Q</i>=#b24<br/>
<i>ref_addr</i>=(<i>Q</i>,y+#b160)=#w44568<br/>
<i>ref</i>=#b186, <i>udg_page</i>=#b128<br/>
<i>udg_addr</i>=(<i>ref</i>,<i>udg_page</i>)=#w32954<br/>
<i>attr</i>=#b56
</td>
</tr>
</table>
</div>
</td>
</tr>
</table>
<p>where:</p>
<ul>
<li>
<i>Q</i> is the 'Q value' for the tile (located at <i>Q_addr</i>)
</li>
<li>
<i>ref</i> is the UDG reference for the tile (located at <i>ref_addr</i>)
</li>
<li>
<i>udg_page</i> is the base page for the tile graphic data (#b128, #b136, #b144
or #b152)
</li>
<li>
<i>udg_addr</i> is the base address of the tile graphic data
(<i>ref</i>+#b256*<i>udg_page</i>)
</li>
<li>
<i>attr</i> is the tile's attribute byte
</li>
</ul>
<p>
For an explanation of the Q value and how it is used to determine
<i>udg_page</i> and the attribute byte (<i>attr</i>) for a tile, see #R24684.
</p>
<p>
The eight graphic bytes for a tile are located thus:
</p>
<table class="default">
<tr><th>Address</th><th>Contents</th></tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>)=<i>udg_addr</i></td>
<td>Graphic byte 1/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+1)=<i>udg_addr</i>+#b256</td>
<td>Graphic byte 2/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+2)=<i>udg_addr</i>+#b512</td>
<td>Graphic byte 3/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+3)=<i>udg_addr</i>+#b768</td>
<td>Graphic byte 4/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+4)=<i>udg_addr</i>+#w1024</td>
<td>Graphic byte 5/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+5)=<i>udg_addr</i>+#w1280</td>
<td>Graphic byte 6/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+6)=<i>udg_addr</i>+#w1536</td>
<td>Graphic byte 7/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+7)=<i>udg_addr</i>+#w1792</td>
<td>Graphic byte 8/8</td>
</tr>
</table>
<p>
Any given tile (identified by <i>udg_addr</i>) may appear at more than one
location in the play area.
</p>
#CALL:play_area_tiles(192,21)
#CALL:mutable_tiles(doors,56893,57344,56832,57405,64000,56320)
#CALL:mutable_tiles(windows,55296,55808)
#CALL:mutable_tiles(tree,57856)
#CALL:mutable_tiles(cups,56694,56699,56950,56955,57206,57211,57462,57467)

[Template:play_area_tiles]
<table class="tiles">
{rows}
</table>

[Template:play_area_tile_row]
<tr>
{tiles}
</tr>

[Template:play_area_tile]
<td>
<div class="T" onclick="s('{prefix}{x}x{y}')">
{img}
</div>
<div id="{prefix}{x}x{y}" class="B P" onclick="h(this)">
<div class="H">(x,y)=({x},{y})</div>
<table>
<tr>
<td>{img}</td>
<td>
<i>Q_addr</i>=(x,{x_offset})={q_addr}, <i>Q</i>={q}<br/>
<i>ref_addr</i>=(<i>Q</i>,y+{y_offset})={ref_addr}<br/>
<i>ref</i>={ref}, <i>udg_page</i>={udg_page}<br/>
<i>udg_addr</i>=(<i>ref</i>,<i>udg_page</i>)={udg_addr}<br/>
<i>attr</i>={attr}
</td>
</tr>
</table>
</div>
</td>

[Template:play_area_tile_blank]
<td></td>

[Template:doors]
<h3>Doors (open)</h3>
<table class="mgrid">
<tr>
<td>
{doors[0]}
</td>
<td>
{doors[1]}
</td>
<td>
{doors[2]}
</td>
<td>
{doors[3]}
</td>
<td>
{doors[4]}
</td>
<td>
{doors[5]}
</td>
</tr>
</table>

[Template:windows]
<h3>Windows (open)</h3>
<table class="mgrid">
<tr>
<td>
{windows[0]}
</td>
<td>
{windows[1]}
</td>
</tr>
</table>

[Template:tree]
<h3>Tree (with bike attached)</h3>
<table class="mgrid">
<tr>
<td>
{tree[0]}
</td>
</tr>
</table>

[Template:cups]
<h3>Cups</h3>
<table>
<tr>
<td>
<table class="mgrid">
<tr>
<td>
{cups[0]}
</td>
<td>
{cups[1]}
</td>
</tr>
</table>
</td>
<td>Leftmost cup on the shelf in the boys' skool (water/sherry)</td>
</tr>
<tr>
<td>
<table class="mgrid">
<tr>
<td>
{cups[2]}
</td>
<td>
{cups[3]}
</td>
</tr>
</table>
</td>
<td>Middle cup on the shelf in the boys' skool (water/sherry)</td>
</tr>
<tr>
<td>
<table class="mgrid">
<tr>
<td>
{cups[4]}
</td>
<td>
{cups[5]}
</td>
</tr>
</table>
</td>
<td>Rightmost cup on the shelf in the boys' skool (water/sherry)</td>
</tr>
<tr>
<td>
<table class="mgrid">
<tr>
<td>
{cups[6]}
</td>
<td>
{cups[7]}
</td>
</tr>
</table>
</td>
<td>Cup on the shelf in the girls' skool (water/sherry)</td>
</tr>
</table>

[Page:InitialAnimatoryStates]
PageContent=#INCLUDE(InitialAnimatoryStates)

[InitialAnimatoryStates]
#PUSHS
#CALL:adjust_mutable(57405)
#CALL:adjust_mutable(64000)
#CALL:adjust_mutable(57856)
<div>#CALL:play_area(initial_as,0,0,192,21,2,1,8)</div>
#POPS

[Page:AnimatoryStates]
PageContent=#INCLUDE(AnimatoryStatesPage)

[AnimatoryStatesPage]
<table class="animatoryStates">
#CALL:animatory_states()
</table>

[Template:animatory_state_row]
<tr>
<td id="{state_l}">{img_l}</td>
<td id="{state_r}">{img_r}</td>
<td>{state_l_s}, {state_r_s}: {desc}</td>
</tr>

[Page:AnimatoryStateTiles]
JavaScript=tiles.js
PageContent=#INCLUDE(AnimatoryStateTiles)

[AnimatoryStateTiles]
<div>
<p>Click a tile in the gallery below to see the following info:</p>
<table>
<tr>
<td>
<div class="B">
<div class="H">#b0: row 1, column 1</div>
<table>
<tr>
<td><img alt="#b0:1,1" src="#IF({vars[pub]}>2)(../)../images/astiles/b762.png"/></td>
<td>
<i>lsb</i>=#b128, <i>ref_page</i>=#b220<br/>
<i>ref_addr</i>=(<i>lsb</i>,<i>ref_page</i>)=#w56448<br/>
<i>ref</i>=#b98, <i>udg_page</i>=#b183<br/>
<i>udg_addr</i>=(<i>ref</i>,<i>udg_page</i>)=#w46946
</td>
</tr>
</table>
</div>
</td>
</tr>
</table>
<p>where:</p>
<ul>
<li>
<i>lsb</i> is the animatory state + #b128 (#b128-#b255)
</li>
<li>
<i>ref_page</i> is the page containing the UDG reference for the tile
(#b215-#b226)
</li>
<li>
<i>ref_addr</i> is the address of the UDG reference
(<i>lsb</i>+#w256*<i>ref_page</i>)
</li>
<li>
<i>ref</i> is the UDG reference at <i>ref_addr</i> (#b0, #b73-#b255)
</li>
<li>
<i>udg_page</i> is the base page for the tile graphic data (#b183 or #b199)
</li>
<li>
<i>udg_addr</i> is the base address of the tile graphic data
(<i>ref</i>+#w256*<i>udg_page</i>)
</li>
</ul>
<p>
The graphic for an animatory state is made up of 12 tiles in a 3x4 grid:
</p>
<table class="asgrid">
<tr><td>0</td><td>4</td><td>8</td></tr>
<tr><td>1</td><td>5</td><td>9</td></tr>
<tr><td>2</td><td>6</td><td>10</td></tr>
<tr><td>3</td><td>7</td><td>11</td></tr>
</table>
<p>
Each tile has a UDG reference (<i>ref</i>) located at (<i>lsb</i>,T+#b215),
where T is the tile number (0-11).
</p>
<p>
The eight graphic bytes and eight mask bytes for a tile are located thus:
</p>
<table class="default">
<tr><th>Address</th><th>Contents</th></tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>)=<i>udg_addr</i></td>
<td>Graphic byte 1/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b1)=<i>udg_addr</i>+#w256</td>
<td>Mask byte 1/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b2)=<i>udg_addr</i>+#w512</td>
<td>Graphic byte 2/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b3)=<i>udg_addr</i>+#w768</td>
<td>Mask byte 2/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b4)=<i>udg_addr</i>+#w1024</td>
<td>Graphic byte 3/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b5)=<i>udg_addr</i>+#w1280</td>
<td>Mask byte 3/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b6)=<i>udg_addr</i>+#w1536</td>
<td>Graphic byte 4/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b7)=<i>udg_addr</i>+#w1792</td>
<td>Mask byte 4/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b8)=<i>udg_addr</i>+#w2048</td>
<td>Graphic byte 5/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b9)=<i>udg_addr</i>+#w2304</td>
<td>Mask byte 5/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b10)=<i>udg_addr</i>+#w2560</td>
<td>Graphic byte 6/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b11)=<i>udg_addr</i>+#w2816</td>
<td>Mask byte 6/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b12)=<i>udg_addr</i>+#w3072</td>
<td>Graphic byte 7/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b13)=<i>udg_addr</i>+#w3328</td>
<td>Mask byte 7/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b14)=<i>udg_addr</i>+#w3584</td>
<td>Graphic byte 8/8</td>
</tr>
<tr>
<td>(<i>ref</i>,<i>udg_page</i>+#b15)=<i>udg_addr</i>+#w3840</td>
<td>Mask byte 8/8</td>
</tr>
</table>
<p>
The 'null' UDG (<i>ref</i>=#b0) is always taken to be blank (eight zeroes); its
graphic data is not looked up at (#b0,#b183) or (#b0,#b199).
</p>
<p>
Any given tile (identified by <i>udg_addr</i>) may appear in more than one
animatory state (and in more than one place in a single animatory state).
</p>
<p>
The tiles for animatory states #b128-#b255 are not stored separately; the tiles
for animatory state N>=#b128 are obtained by flipping the tiles for animatory
state N-#b128 (see #R24576).
</p>
</div>
<table class="asTiles">
#CALL:astiles()
</table>

[Template:astiles_row]
<tr>
{frames}
<td>{desc}</td>
</tr>

[Template:astiles_frame_4x3]
<td>
<table class="A">
<tr>
<td>{tiles[0]}</td>
<td>{tiles[1]}</td>
<td>{tiles[2]}</td>
</tr>
<tr>
<td>{tiles[3]}</td>
<td>{tiles[4]}</td>
<td>{tiles[5]}</td>
</tr>
<tr>
<td>{tiles[6]}</td>
<td>{tiles[7]}</td>
<td>{tiles[8]}</td>
</tr>
<tr>
<td>{tiles[9]}</td>
<td>{tiles[10]}</td>
<td>{tiles[11]}</td>
</tr>
</table>
</td>

[Template:astile]
<div class="T" onclick="s('{bubble_id}')">
{img}
</div>
<div id="{bubble_id}" class="B P" onclick="h(this)">
<div class="H">{state}: row {row}, column {column}</div>
<table>
<tr>
<td>{img}</td>
<td>
<i>lsb</i>={lsb}, <i>ref_page</i>={ref_page}<br/>
<i>ref_addr</i>=(<i>lsb</i>,<i>ref_page</i>)={ref_addr}<br/>
<i>ref</i>={ref}, <i>udg_page</i>={udg_page}<br/>
<i>udg_addr</i>=(<i>ref</i>,<i>udg_page</i>)={udg_addr}
</td>
</tr>
</table>
</div>

[Template:astile_null]
<div class="T" onclick="s('{bubble_id}')">
{img}
</div>
<div id="{bubble_id}" class="B P" onclick="h(this)">
<div class="H">{state}: row {row}, column {column}</div>
<table>
<tr>
<td>{img}</td>
<td>
<i>lsb</i>={lsb}, <i>ref_page</i>={ref_page}<br/>
<i>ref_addr</i>=(<i>lsb</i>,<i>ref_page</i>)={ref_addr}<br/>
<i>ref</i>={ref}
</td>
</tr>
</table>
</div>

[Page:CharacterBuffers]
PageContent=#INCLUDE(CharacterBuffers)

[CharacterBuffers]
<p>The character buffers occupy bytes #b0-#b36 in pages #b183-#b214. The
buffers in pages #b198, #b199, #b206, #b207 and #b208 may be used by mice
released by ERIC.</p>
#CALL:cast()
#CALL:cbuffer()

[Template:cast]
#TABLE(cbuffer,cbufPage,cbufAddress,cbufCharacter,transparent,cbufPage,cbufAddress,cbufCharacter,transparent,cbufPage,cbufAddress,cbufCharacter)
{{ =h Page | =h Address | =h Character      |  | =h Page | =h Address | =h Character      |  | =h Page | =h Address | =h Character }}
{{ #b183   | #R46848    | {characters[183]} |  | #b194   | #R49664    | {characters[194]} |  | #b205   | #R52480    | {characters[205]} }}
{{ #b184   | #R47104    | {characters[184]} |  | #b195   | #R49920    | {characters[195]} |  | #b206   | #R52736    | {characters[206]} }}
{{ #b185   | #R47360    | {characters[185]} |  | #b196   | #R50176    | {characters[196]} |  | #b207   | #R52992    | {characters[207]} }}
{{ #b186   | #R47616    | {characters[186]} |  | #b197   | #R50432    | {characters[197]} |  | #b208   | #R53248    | {characters[208]} }}
{{ #b187   | #R47872    | {characters[187]} |  | #b198   | #R50688    | {characters[198]} |  | #b209   | #R53504    | {characters[209]} }}
{{ #b188   | #R48128    | {characters[188]} |  | #b199   | #R50944    | {characters[199]} |  | #b210   | #R53760    | {characters[210]} }}
{{ #b189   | #R48384    | {characters[189]} |  | #b200   | #R51200    | {characters[200]} |  | #b211   | #R54016    | {characters[211]} }}
{{ #b190   | #R48640    | {characters[190]} |  | #b201   | #R51456    | {characters[201]} |  | #b212   | #R54272    | {characters[212]} }}
{{ #b191   | #R48896    | {characters[191]} |  | #b202   | #R51712    | {characters[202]} |  | #b213   | #R54528    | {characters[213]} }}
{{ #b192   | #R49152    | {characters[192]} |  | #b203   | #R51968    | {characters[203]} |  | #b214   | #R54784    | {characters[214]} }}
{{ #b193   | #R49408    | {characters[193]} |  | #b204   | #R52224    | {characters[204]} }}
TABLE#

[Template:cbuffer]
<p>The bytes in each character buffer are used as follows:</p>
<table class="cbuffer">
<tr>
<th>Byte(s)</th>
<th>Contents</th>
</tr>
{m_cbuffer_bytes}
</table>

[Template:cbuffer_bytes]
<tr>
<td class="cbufBytes" rowspan="{rowspan}">{bytes}</td>
{t_cbuffer_desc}
</tr>
{m_cbuffer_desc_row}

[Template:cbuffer_desc_row]
<tr>
{t_cbuffer_desc}
</tr>

[Template:cbuffer_desc]
<td class="cbufByteDesc">
{desc}
</td>

[Page:MainTimetable]
Content=asm/#N46528.html

[Page:PersonalTimetables]
PageContent=#INCLUDE(PersonalTimetables)

[PersonalTimetables]
<table class="timetable">
<tr>
<th>No.</th>
<th>Character</th>
</tr>
#CALL:personal_timetables()
</table>

[Template:personal_timetable]
<tr>
<td class="ptCharNum">#R{address}({num})</td>
<td class="ptCharName">{name}</td>
</tr>

[Page:LessonIndex]
PageContent=#INCLUDE(LessonIndex)

[LessonIndex]
<table class="lesson">
<tr>
<th>ID</th>
<th>Lesson</th>
</tr>
#CALL:lesson_index()
</table>

[Template:lesson_type]
<tr>
<td class="lessonType">#LESSON{type}</td>
<td class="lesson">{description}</td>
</tr>

[Page:Lesson37]
PageContent=#CALL:lesson(37)

[Page:Lesson38]
PageContent=#CALL:lesson(38)

[Page:Lesson39]
PageContent=#CALL:lesson(39)

[Page:Lesson40]
PageContent=#CALL:lesson(40)

[Page:Lesson41]
PageContent=#CALL:lesson(41)

[Page:Lesson42]
PageContent=#CALL:lesson(42)

[Page:Lesson43]
PageContent=#CALL:lesson(43)

[Page:Lesson44]
PageContent=#CALL:lesson(44)

[Page:Lesson45]
PageContent=#CALL:lesson(45)

[Page:Lesson46]
PageContent=#CALL:lesson(46)

[Page:Lesson47]
PageContent=#CALL:lesson(47)

[Page:Lesson48]
PageContent=#CALL:lesson(48)

[Page:Lesson49]
PageContent=#CALL:lesson(49)

[Page:Lesson50]
PageContent=#CALL:lesson(50)

[Page:Lesson51]
PageContent=#CALL:lesson(51)

[Page:Lesson52]
PageContent=#CALL:lesson(52)

[Page:Lesson53]
PageContent=#CALL:lesson(53)

[Page:Lesson54]
PageContent=#CALL:lesson(54)

[Page:Lesson55]
PageContent=#CALL:lesson(55)

[Page:Lesson56]
PageContent=#CALL:lesson(56)

[Page:Lesson57]
PageContent=#CALL:lesson(57)

[Page:Lesson58]
PageContent=#CALL:lesson(58)

[Page:Lesson59]
PageContent=#CALL:lesson(59)

[Template:lesson]
<table class="asm-navigation">
<tr>
<td class="prev">
<span class="prev-{prev_lesson[exists]}">Prev:
<a href="{prev_lesson[href]}">{prev_lesson[num]}</a></span>
</td>
<td class="up">Up: #LINK:LessonIndex(Index)</td>
<td class="next">
<span class="next-{next_lesson[exists]}">Next:
<a href="{next_lesson[href]}">{next_lesson[num]}</a></span>
</td>
</tr>
</table>
<div class="description">Lesson {lesson[num]}: {lesson[desc]}</div>
<table class="lesson">
<tr>
<th>Character</th>
<th>Address</th>
<th>Command list</th>
</tr>
{m_timetable}
</table>
<table class="asm-navigation">
<tr>
<td class="prev">
<span class="prev-{prev_lesson[exists]}">Prev:
<a href="{prev_lesson[href]}">{prev_lesson[num]}</a></span>
</td>
<td class="up">Up: #LINK:LessonIndex(Index)</td>
<td class="next">
<span class="next-{next_lesson[exists]}">Next:
<a href="{next_lesson[href]}">{next_lesson[num]}</a></span>
</td>
</tr>
</table>

[Template:timetable]
<tr>
<td class="lessonCharacter">#R{pt_address}({character_num}) - {character}</td>
<td class="lessonAddress">{lesson_address}</td>
<td class="lesson">#R{cl_address}({cl_num}) - {cl_desc}</td>
</tr>

[Page:CommandLists]
Content=asm/#N59392.html

[Page:Keys]
PageContent=#INCLUDE(Keys)

[Keys]
<div class="details">
<div>Key = CHR$(Index + #b48)</div>
<div>Address = Index + #R58624</div>
<div>Offset = PEEK(Address)</div>
<div>
Lookup = Offset + #w58624 (points to an entry in the table at #R58704)
</div>
<div>Routine = address at (Lookup, Lookup + 1)</div>
</div>
<table class="keytable">
<tr>
<th>Index</th>
<th>Key</th>
<th>Address</th>
<th>Offset</th>
<th>Lookup</th>
<th>Routine</th>
<th>Purpose</th>
</tr>
#CALL:keypress_table_rows()
</table>

[Template:keypress_table_row]
<tr>
<td class="keyIndex">{index}</td>
<td class="key">{key}</td>
<td class="keyAddress">{address}</td>
<td class="keyOffset">{offset}</td>
<td class="keyAddress">{lookup}</td>
<td class="keyAddress">{routine}</td>
<td class="keyPurpose">{purpose}</td>
</tr>
